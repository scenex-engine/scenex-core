// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name UniversalSceneRuntime
import RealityKit
import Swift
import SwiftUI
@_exported import UniversalSceneRuntime
import _Concurrency
import _RealityKit_SwiftUI
import _StringProcessing
import _SwiftConcurrencyShims
import simd
public typealias Entity = RealityFoundation.Entity
public typealias Transform = RealityFoundation.Transform
public typealias PerspectiveCameraComponent = RealityFoundation.PerspectiveCameraComponent
@_Concurrency.MainActor public func initialize()
@_Concurrency.MainActor @preconcurrency public struct Console : SwiftUI.Scene {
  @_Concurrency.MainActor @preconcurrency public init()
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUI.Scene {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s21UniversalSceneRuntime7ConsoleV4bodyQrvp", 0) __
}
@_Concurrency.MainActor public struct GameWindow : SwiftUI.Scene {
  @_Concurrency.MainActor public init()
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUI.Scene {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s21UniversalSceneRuntime10GameWindowV4bodyQrvp", 0) __
}
extension SwiftUI.Scene {
  @_Concurrency.MainActor @preconcurrency public func start(_ script: Swift.String) -> some SwiftUI.Scene
  
}
extension UniversalSceneRuntime.Console : Swift.Sendable {}
extension UniversalSceneRuntime.GameWindow : Swift.Sendable {}
